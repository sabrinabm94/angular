{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { GifSearchService } from './api/git-search.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api/git-search.service\";\nimport * as i2 from \"./ui/gif-search/gif-search.component\";\nvar AppComponent = /** @class */function () {\n  function AppComponent(service) {\n    var _this = this;\n    this.service = service;\n    this.title = 'gif-search';\n    this.receiveGifs = new EventEmitter();\n    this.gifs = [];\n    this.searchGifs = function (gifs) {\n      _this.receiveGifs.emit(gifs);\n    };\n  }\n  AppComponent.prototype.ngOnInit = function () {};\n  AppComponent.prototype.verifyResponse = function (response) {\n    var _this = this;\n    this.gifs = [];\n    if (this.error == null) {\n      response.forEach(function (gif) {\n        _this.gifs.push(gif);\n      });\n      this.searchGifs(this.gifs);\n      return this.gifs;\n    } else {\n      return this.error;\n    }\n  };\n  AppComponent.prototype.searchBySubscribe = function (form) {\n    var _this = this;\n    this.error = null;\n    this.service.searchGifObservable(form.value.term, form.value.limit).subscribe(function (response) {\n      return _this.verifyResponse(response.data);\n    }, function (error) {\n      return _this.error = error;\n    });\n  };\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.GifSearchService));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    outputs: {\n      receiveGifs: \"receiveGifs\"\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"gifsSearch\", \"\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-gif-search\", null, 0);\n      }\n    },\n    dependencies: [i2.GifSearchComponent]\n  });\n  return AppComponent;\n}();\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}