{"ast":null,"code":"import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// @Injectable({\n//   providedIn: \"root\",\n// })\nvar GifSearchService = /** @class */function () {\n  function GifSearchService(http) {\n    this.http = http;\n    this.apiKey = \"MeGG5sG2LWbeS2S6FhMHEBByZ51gsRie\";\n    this.shortUrl = \"//api.giphy.com/v1/gifs/search?q=\";\n    this.limitPattern = \"^-?[0-9]\\\\d*(\\\\.\\\\d{1,2})?$\";\n    this.termPattern = \"^[a-zA-Z0-9]*$\";\n    //public headers = { headers: new HttpHeaders().set(\"Authorization\", \"Bearer 123\") };\n    this.headers = {\n      headers: new HttpHeaders()\n    };\n  }\n  GifSearchService.prototype.getUrl = function (term, limit) {\n    return this.shortUrl + term + \"&api_key=\" + this.apiKey + \"&limit=\" + limit;\n  };\n  GifSearchService.prototype.getApiKey = function () {\n    return this.apiKey;\n  };\n  GifSearchService.prototype.searchGif = function (term, limit) {\n    var url = this.getUrl(term, limit);\n    return this.http.get(\"\".concat(url), this.headers);\n  };\n  GifSearchService.prototype.searchGifObservable = function (term, limit) {\n    var url = this.getUrl(term, limit);\n    return this.http.get(\"\".concat(url), this.headers);\n  };\n  GifSearchService.ɵfac = function GifSearchService_Factory(t) {\n    return new (t || GifSearchService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  GifSearchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GifSearchService,\n    factory: GifSearchService.ɵfac,\n    providedIn: \"any\"\n  });\n  return GifSearchService;\n}();\nexport { GifSearchService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}